import jenkins.model.Jenkins
import com.cloudbees.hudson.plugins.folder.AbstractFolder

// Replace this list with your folder names
def folderNames = ['folder1', 'folder2', 'folder3']

def findMostRecentBuild(folder) {
    def mostRecentBuild = null
    def jobs = folder.getItems()
    jobs.each { item ->
        if (item instanceof com.cloudbees.hudson.plugins.folder.AbstractFolder) {
            // If item is a folder, process it recursively
            def subfolderRecentBuild = findMostRecentBuild(item)
            if (subfolderRecentBuild != null && (mostRecentBuild == null || subfolderRecentBuild.getTime() > mostRecentBuild.getTime())) {
                mostRecentBuild = subfolderRecentBuild
            }
        } else {
            // If item is a job, get the last build time
            def lastBuild = item.getLastBuild()
            if (lastBuild != null && (mostRecentBuild == null || lastBuild.getTime() > mostRecentBuild.getTime())) {
                mostRecentBuild = lastBuild
            }
        }
    }
    return mostRecentBuild
}

folderNames.each { folderName ->
    def folder = Jenkins.instance.getItem(folderName)
    if (folder != null && folder instanceof com.cloudbees.hudson.plugins.folder.Folder) {
        def mostRecentBuild = findMostRecentBuild(folder)
        if (mostRecentBuild != null) {
            println("Folder: ${folderName}, Most Recent Build: ${mostRecentBuild.getTime()}")
        } else {
            println("Folder: ${folderName}, No builds found.")
        }
    } else {
        println("Folder '${folderName}' not found.")
    }
}